{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "AB::PP::Modify::pp_id",
            "uriImported": "stream:/bifrostGraphShape1",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "-1528.38 -98.7653"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "PP_in"
                                                },
                                                {
                                                    "metaName": "ID_Count"
                                                },
                                                {
                                                    "metaName": "Fixed_ID"
                                                },
                                                {
                                                    "metaName": "seed"
                                                },
                                                {
                                                    "metaName": "Mask"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "input1",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "-1130.3 -808.124"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "Type"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "input2",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "900.984 -492.741"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "Bypass"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1952.11 -238.882"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "pp"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "sticky_note",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "sticky_note"
                        },
                        {
                            "metaName": "fontSize",
                            "metaType": "string",
                            "metaValue": "10"
                        },
                        {
                            "metaName": "format",
                            "metaType": "string",
                            "metaValue": "txt"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "0:linear\n1:Random\n2:Cycle\n3:Fixed\n"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#ffb2b2b5"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-467.895 -1011.67 171.055 159.655"
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "sticky note"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Hyuu::Geometry,copy_geo_to_points"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Type_Conversion,to_float"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Constants,float"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Geometry::Properties,set_geo_property"
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "-891.981 -990.015 2156.53 1113.45"
                },
                {
                    "metaName": "DisplayMode",
                    "metaType": "string",
                    "metaValue": "2"
                },
                {
                    "metaName": "LayoutPos",
                    "metaType": "string",
                    "metaValue": "296.592 -263.525"
                },
                {
                    "metaName": "UILayout",
                    "metaType": "string",
                    "metaValue": "{\n    \"NodeLayout\": {\n        \"hideUndeclaredPorts\": false,\n        \"items\": [\n            {\n                \"port\": \"PP_in\"\n            },\n            {\n                \"port\": \"Bypass\"\n            },\n            {\n                \"expanded\": false,\n                \"group\": \"Values\",\n                \"items\": [\n                    {\n                        \"port\": \"Type\"\n                    },\n                    {\n                        \"port\": \"ID_Count\"\n                    },\n                    {\n                        \"port\": \"Fixed_ID\"\n                    },\n                    {\n                        \"port\": \"seed\"\n                    }\n                ]\n            },\n            {\n                \"port\": \"Mask\"\n            }\n        ]\n    }\n}\n"
                },
                {
                    "metaName": "PortExpandedState",
                    "metadata": [
                        {
                            "metaName": "Values",
                            "metaType": "string",
                            "metaValue": "0"
                        }
                    ]
                }
            ],
            "terminalStates": [
                {
                    "name": "Core::Graph::terminal::final",
                    "enabled": "true"
                },
                {
                    "name": "Core::Graph::terminal::proxy",
                    "enabled": "true"
                },
                {
                    "name": "Core::Graph::terminal::diagnostic",
                    "enabled": "false"
                }
            ],
            "ports": [
                {
                    "portName": "PP_in",
                    "portDirection": "input",
                    "portType": "Object",
                    "portDefault": {}
                },
                {
                    "portName": "Type",
                    "portDirection": "input",
                    "portType": "long",
                    "portDefault": "0",
                    "metadata": [
                        {
                            "metaName": "UIWidget",
                            "metaType": "string",
                            "metaValue": "ComboBox"
                        },
                        {
                            "metaName": "UIWidgetProp",
                            "metaType": "string",
                            "metaValue": "editable=false;items={Linear=0;Random=1;Fixed=2}"
                        }
                    ]
                },
                {
                    "portName": "ID_Count",
                    "portDirection": "input",
                    "portType": "long",
                    "portDefault": "1"
                },
                {
                    "portName": "Fixed_ID",
                    "portDirection": "input",
                    "portType": "long",
                    "portDefault": "0"
                },
                {
                    "portName": "seed",
                    "portDirection": "input",
                    "portType": "long",
                    "portDefault": "128"
                },
                {
                    "portName": "Mask",
                    "portDirection": "input",
                    "metadata": [
                        {
                            "metaName": "TypeWranglingSuggestedTypes",
                            "metaType": "string",
                            "metaValue": "float, string, Core::Fields::ScalarField, array<float>, array<long>"
                        }
                    ]
                },
                {
                    "portName": "pp",
                    "portDirection": "output",
                    "portType": "Object"
                },
                {
                    "portName": "Bypass",
                    "portDirection": "input",
                    "portType": "bool",
                    "portDefault": "false"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "equal",
                    "nodeType": "Core::Logic::equal",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-495.206 -827.341"
                        }
                    ]
                },
                {
                    "nodeName": "if",
                    "nodeType": "Core::Logic::if",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "218.756 -885.138"
                        }
                    ]
                },
                {
                    "nodeName": "modulo",
                    "nodeType": "Core::Math::modulo",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-480.589 -389.347"
                        }
                    ]
                },
                {
                    "nodeName": "set_geo_property",
                    "nodeType": "Geometry::Properties::set_geo_property",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1172.19 -186.841"
                        }
                    ]
                },
                {
                    "nodeName": "point_scope",
                    "nodeType": "Diagnostic::Display::point_scope",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1678.78 204.974"
                        }
                    ]
                },
                {
                    "nodeName": "terminal",
                    "nodeType": "Core::Graph::terminal",
                    "fanInPortNames": {
                        "final": [],
                        "proxy": [],
                        "diagnostic": [
                            "diagnostic_geo"
                        ]
                    },
                    "terminalStates": [
                        {
                            "name": "Core::Graph::terminal::final",
                            "enabled": "false"
                        },
                        {
                            "name": "Core::Graph::terminal::proxy",
                            "enabled": "false"
                        },
                        {
                            "name": "Core::Graph::terminal::diagnostic",
                            "enabled": "true"
                        }
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "diagnostic",
                                    "metaType": "string",
                                    "metaValue": "1"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2048.48 158.558"
                        }
                    ]
                },
                {
                    "nodeName": "random_value",
                    "nodeType": "Core::Randomization::random_value",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-466.629 -210.263"
                        }
                    ]
                },
                {
                    "nodeName": "equal1",
                    "nodeType": "Core::Logic::equal",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-492.034 -732.946"
                        }
                    ]
                },
                {
                    "nodeName": "equal2",
                    "nodeType": "Core::Logic::equal",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-488.425 -643.731"
                        }
                    ]
                },
                {
                    "nodeName": "equal3",
                    "nodeType": "Core::Logic::equal",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-487.49 -544.313"
                        }
                    ]
                },
                {
                    "nodeName": "if1",
                    "nodeType": "Core::Logic::if",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-124.72 -629.408"
                        }
                    ]
                },
                {
                    "nodeName": "interpret_auto_port_as_scalar",
                    "nodeType": "Geometry::Common::interpret_auto_port_as_scalar",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-971.862 84.5785"
                        }
                    ]
                },
                {
                    "nodeName": "to_unsigned_int",
                    "nodeType": "Core::Type_Conversion::to_unsigned_int",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-100.223 82.7594"
                        }
                    ]
                },
                {
                    "nodeName": "pass",
                    "nodeType": "Core::Graph::pass",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-112.67 -139.502"
                        }
                    ]
                },
                {
                    "nodeName": "get_from_array",
                    "nodeType": "Core::Array::get_from_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "328.974 -72.8861"
                        }
                    ]
                },
                {
                    "nodeName": "set_in_array",
                    "nodeType": "Core::Array::set_in_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "579.453 69.5262"
                        }
                    ]
                },
                {
                    "nodeName": "get_geo_property_check",
                    "nodeType": "Geometry::Properties::get_geo_property_check",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "329.139 174.754"
                        }
                    ]
                },
                {
                    "nodeName": "greater_or_equal",
                    "nodeType": "Core::Logic::greater_or_equal",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-685.629 115.782"
                        }
                    ]
                },
                {
                    "nodeName": "find_all_in_array1",
                    "nodeType": "Core::Array::find_all_in_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-421.509 94.8445"
                        }
                    ]
                },
                {
                    "nodeName": "if3",
                    "nodeType": "Core::Logic::if",
                    "metadata": [
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "877.109 -77.558"
                        },
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        }
                    ]
                },
                {
                    "nodeName": "if4",
                    "nodeType": "Core::Logic::if",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1456.38 -355.433"
                        }
                    ]
                },
                {
                    "nodeName": "pp_sequence_index_array",
                    "nodeType": "AB::PP::Utility::pp_sequence_index_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1136.35 -389.29"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "equal.output",
                    "target": "if.condition"
                },
                {
                    "source": "modulo.remainder",
                    "target": "if.true_case"
                },
                {
                    "source": "point_scope.diagnostic_geo",
                    "target": "terminal.diagnostic.diagnostic_geo"
                },
                {
                    "source": "random_value.random_value",
                    "target": "if1.true_case"
                },
                {
                    "source": "equal1.output",
                    "target": "if1.condition"
                },
                {
                    "source": "if1.output",
                    "target": "if.false_case"
                },
                {
                    "source": "pass.output",
                    "target": "set_geo_property.geometry"
                },
                {
                    "source": ".ID_Count",
                    "target": "modulo.divisor"
                },
                {
                    "source": ".ID_Count",
                    "target": "random_value.max"
                },
                {
                    "source": ".Fixed_ID",
                    "target": "if1.false_case"
                },
                {
                    "source": ".seed",
                    "target": "random_value.seed"
                },
                {
                    "source": ".Mask",
                    "target": "interpret_auto_port_as_scalar.interpreted_scalar_port"
                },
                {
                    "source": "if.output",
                    "target": "get_from_array.array"
                },
                {
                    "source": "to_unsigned_int.unsigned_int",
                    "target": "get_from_array.index"
                },
                {
                    "source": "pass.output",
                    "target": "get_geo_property_check.geometry"
                },
                {
                    "source": "get_geo_property_check.data",
                    "target": "set_in_array.array"
                },
                {
                    "source": "to_unsigned_int.unsigned_int",
                    "target": "set_in_array.index"
                },
                {
                    "source": "get_from_array.value",
                    "target": "set_in_array.value"
                },
                {
                    "source": "greater_or_equal.output",
                    "target": "find_all_in_array1.array"
                },
                {
                    "source": "interpret_auto_port_as_scalar.data",
                    "target": "greater_or_equal.first"
                },
                {
                    "source": "find_all_in_array1.indices",
                    "target": "to_unsigned_int.from"
                },
                {
                    "source": "get_geo_property_check.found_property",
                    "target": "if3.condition"
                },
                {
                    "source": "set_in_array.out_array",
                    "target": "if3.true_case"
                },
                {
                    "source": "if.output",
                    "target": "if3.false_case"
                },
                {
                    "source": "if3.output",
                    "target": "set_geo_property.data"
                },
                {
                    "source": ".Bypass",
                    "target": "if4.condition"
                },
                {
                    "source": "set_geo_property.out_geometry",
                    "target": "if4.false_case"
                },
                {
                    "source": "pass.output",
                    "target": "if4.true_case"
                },
                {
                    "source": "if4.output",
                    "target": "point_scope.point_geo"
                },
                {
                    "source": ".PP_in",
                    "target": "interpret_auto_port_as_scalar.geometry"
                },
                {
                    "source": ".PP_in",
                    "target": "pass.input"
                },
                {
                    "source": "if4.output",
                    "target": ".pp"
                },
                {
                    "source": ".PP_in",
                    "target": "pp_sequence_index_array.geo"
                },
                {
                    "source": "pp_sequence_index_array.index_array",
                    "target": "modulo.value"
                },
                {
                    "source": "pp_sequence_index_array.index_array",
                    "target": "random_value.index"
                },
                {
                    "source": ".Type",
                    "target": "equal.first"
                },
                {
                    "source": ".Type",
                    "target": "equal1.first"
                },
                {
                    "source": ".Type",
                    "target": "equal2.first"
                },
                {
                    "source": ".Type",
                    "target": "equal3.first"
                }
            ],
            "values": [
                {
                    "valueName": "equal.second",
                    "valueType": "long",
                    "value": "0"
                },
                {
                    "valueName": "set_geo_property.property",
                    "valueType": "string",
                    "value": "point_instance_id"
                },
                {
                    "valueName": "set_geo_property.target",
                    "valueType": "string",
                    "value": "point_component"
                },
                {
                    "valueName": "point_scope.shape",
                    "valueType": "Geometry::PointShapes",
                    "value": "Sphere"
                },
                {
                    "valueName": "point_scope.default_size",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "point_scope.cull_by_scalar_property",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "point_scope.cull_property",
                    "valueType": "string",
                    "value": "point_age"
                },
                {
                    "valueName": "point_scope.keep_max_value",
                    "valueType": "float",
                    "value": "3f"
                },
                {
                    "valueName": "point_scope.invert_range",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "point_scope.coloring_property",
                    "valueType": "string",
                    "value": "point_instance_id"
                },
                {
                    "valueName": "point_scope.coloring_mode",
                    "valueType": "Diagnostic::ColoringMode",
                    "value": "Palette"
                },
                {
                    "valueName": "point_scope.color",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "1f",
                        "y": "1f",
                        "z": "1f"
                    }
                },
                {
                    "valueName": "point_scope.heatmap_R",
                    "valueType": "Math::FCurve",
                    "value": {
                        "version": "1",
                        "preExtrapolation": "0",
                        "postExtrapolation": "0",
                        "points": [
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "-0.40000000000000002",
                                        "yp": "0.10000000000000001",
                                        "x": "0",
                                        "y": "0.10000000000000001",
                                        "xn": "0.40000000000000002",
                                        "yn": "0.10000000000000001"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "9.5999999999999996",
                                        "yp": "1",
                                        "x": "10",
                                        "y": "1",
                                        "xn": "10.4",
                                        "yn": "1"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "valueName": "point_scope.heatmap_G",
                    "valueType": "Math::FCurve",
                    "value": {
                        "version": "1",
                        "preExtrapolation": "0",
                        "postExtrapolation": "0",
                        "points": [
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "-1.3999999999999999",
                                        "yp": "0",
                                        "x": "-1",
                                        "y": "0",
                                        "xn": "-0.59999999999999998",
                                        "yn": "0"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "4.7000000000000002",
                                        "yp": "1",
                                        "x": "5",
                                        "y": "1",
                                        "xn": "5.2999999999999998",
                                        "yn": "1"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "9.5999999999999996",
                                        "yp": "0",
                                        "x": "10",
                                        "y": "0",
                                        "xn": "10.4",
                                        "yn": "0"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "valueName": "point_scope.heatmap_B",
                    "valueType": "Math::FCurve",
                    "value": {
                        "version": "1",
                        "preExtrapolation": "0",
                        "postExtrapolation": "0",
                        "points": [
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "-0.40000000000000002",
                                        "yp": "1",
                                        "x": "0",
                                        "y": "1",
                                        "xn": "0.40000000000000002",
                                        "yn": "1"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "9.5999999999999996",
                                        "yp": "0.10000000000000001",
                                        "x": "10",
                                        "y": "0.10000000000000001",
                                        "xn": "10.4",
                                        "yn": "0.10000000000000001"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "valueName": "point_scope.arrow_property",
                    "valueType": "string",
                    "value": "point_velocity"
                },
                {
                    "valueName": "point_scope.normalize_arrow",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "point_scope.enable_arrows",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "point_scope.length_scale",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "random_value.index",
                    "valueType": "long",
                    "value": "0"
                },
                {
                    "valueName": "random_value.seed",
                    "valueType": "long",
                    "value": "0"
                },
                {
                    "valueName": "equal1.second",
                    "valueType": "long",
                    "value": "1"
                },
                {
                    "valueName": "equal2.second",
                    "valueType": "long",
                    "value": "2"
                },
                {
                    "valueName": "equal3.second",
                    "valueType": "long",
                    "value": "3"
                },
                {
                    "valueName": "interpret_auto_port_as_scalar.default_value",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "interpret_auto_port_as_scalar.geometry_component",
                    "valueType": "string",
                    "value": "point_component"
                },
                {
                    "valueName": "interpret_auto_port_as_scalar.position_property",
                    "valueType": "string",
                    "value": "point_position"
                },
                {
                    "valueName": "interpret_auto_port_as_scalar.indices",
                    "valueType": "array<long>",
                    "value": []
                },
                {
                    "valueName": "get_geo_property_check.property",
                    "valueType": "string",
                    "value": "point_instance_id"
                },
                {
                    "valueName": "get_geo_property_check.type",
                    "valueType": "array<long>",
                    "value": []
                },
                {
                    "valueName": "greater_or_equal.second",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "find_all_in_array1.value",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "find_all_in_array1.invert",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "pp_sequence_index_array.step",
                    "valueType": "long",
                    "value": "1"
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "input"
                },
                {
                    "name": "output"
                },
                {
                    "name": "input1"
                },
                {
                    "name": "input2"
                }
            ]
        }
    ]
}
